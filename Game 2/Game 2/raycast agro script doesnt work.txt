using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

// Agro script for enemies, so rename for all enemies? ------------------------------------------------------

public class Alien2Agro : MonoBehaviour
{
    [SerializeField]
    Transform player;

    [SerializeField]
    Transform castPoint;

    [SerializeField]
    float agroRange;

    [SerializeField]
    float moveSpeed;

    Rigidbody2D rb2d;
    Animator animator;

    bool isFacingLeft;
    private bool isAgro = false;
    private bool isSearching;

    // Start is called before the first frame update
    private void Start()
    {
        rb2d = GetComponent<Rigidbody2D>();
        animator = GetComponent<Animator>();
    }

    // Update is called once per frame
    void Update()
    {
        if(CanSeePlayer(agroRange))
        {
            isAgro = true;
        }
        else
        {
            if(isAgro)
            {
                if(!isSearching)
                {
                    //isSearching: continue the agro if player has left agro range
                    isSearching = true;
                    Invoke("StopChasingPlayer", 5);
                    animator.Play("Alien2_Stand");
                }
            }
        }

        if(isAgro)
        {
            ChasePlayer();
            animator.Play("Alien2_walk");
        }

        /* // Distance check method: Don't need this since we have raycast (could be an alternative to raycast tho)
        //distance to player
        float distToPlayer = Vector2.Distance(transform.position, player.position);
        print("distToPlayer:" + distToPlayer);
        
        if (distToPlayer < agroRange)
        {
            ChasePlayer();
            animator.Play("Alien2_walk");
        }
        else
        {
            StopChasingPlayer();
            animator.Play("Alien2_Stand");
        }
        */
    }
    
    bool CanSeePlayer(float distance)
    {
        bool val = false;
        float castDist = distance;

        //isFacingLeft exists in order to reverse the raycast to the other direction
        if(!isFacingLeft)
        {
            castDist = -distance;
        }

        //creating raycast
        Vector2 endPos = castPoint.position + Vector3.right * castDist;
        RaycastHit2D hit = Physics2D.Linecast(castPoint.position, endPos, 1 << LayerMask.NameToLayer("Action"));

        if(hit.collider != null)
        {
            if(hit.collider.gameObject.CompareTag("Player"))
            {
                val = true;
            }
            else
            {
                val = false;
            }

            Debug.DrawLine(castPoint.position, hit.point, Color.red);

        }
        else
        {
            Debug.DrawLine(castPoint.position, endPos, Color.blue);
        }

        //return value to CanSeePlayer
        return val;
    }

    void ChasePlayer()
    {
        if(transform.position.x < player.position.x)
        {
            //enemy is left of player = move right
            rb2d.velocity = new Vector2(moveSpeed, 0);
            transform.localScale = new Vector2(-1, 1);
            isFacingLeft = false;
        }
        else
        {
            //enemy is right of player = move left
            rb2d.velocity = new Vector2(-moveSpeed, 0);
            transform.localScale = new Vector2(1, 1);
            isFacingLeft = true;
        }
    }

    void StopChasingPlayer()
    {
        isAgro = false;
        isSearching = false;
        rb2d.velocity = Vector2.zero;
    }

}
